name: Release (Windows)

on:
  workflow_call:
    inputs:
      gog_galaxy_sdk_version:
        description: 'GOG Galaxy SDK version to use'
        type: string
        required: true

jobs:
  windows:
    strategy:
      fail-fast: false
      matrix:
        include:
        - arch: x86
          host: x86
        - arch: x64
          host: x64

    name: Windows (${{ matrix.arch }})

    runs-on: windows-latest

    steps:
    - name: Download source
      uses: actions/download-artifact@v4
      with:
        name: internal-source

    - name: Unpack source
      shell: bash
      run: |
        tar -xf source.tar.gz --strip-components=1

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Enable Rust cache
      uses: Swatinem/rust-cache@v2

    - name: Install dependencies
      shell: bash
      run: |
        echo "::group::Install python dependencies"
        python3 -m pip install cryptography
        echo "::endgroup::"

        echo "::group::Install breakpad dependencies"
        cargo install dump_syms
        echo "::endgroup::"

    - name: Install GOG Galaxy SDK
      shell: bash
      run: |
        if [ "${{ matrix.arch }}" = "x86" ]; then
          ./download-sdk.sh win32 ${{ inputs.gog_galaxy_sdk_version }}
        else
          ./download-sdk.sh win64 ${{ inputs.gog_galaxy_sdk_version }}
        fi

    - name: Import code signing certificate
      shell: powershell
      # If this is run on a fork, there may not be a certificate set up - continue in this case
      continue-on-error: true
      run: |
        $tempFile = [System.IO.Path]::GetTempFileName()
        $bytes = [System.Convert]::FromBase64String($env:WINDOWS_CERTIFICATE_P12)
        [IO.File]::WriteAllBytes($tempFile, $bytes)
        $pwd = ConvertTo-SecureString $env:WINDOWS_CERTIFICATE_PASSWORD -AsPlainText -Force
        Import-PfxCertificate -FilePath $tempFile -CertStoreLocation Cert:\CurrentUser\My -Password $pwd
        Remove-Item $tempFile
      env:
        WINDOWS_CERTIFICATE_P12: ${{ secrets.WINDOWS_CERTIFICATE_P12 }}
        WINDOWS_CERTIFICATE_PASSWORD: ${{ secrets.WINDOWS_CERTIFICATE_PASSWORD }}

    - name: Install MSVC problem matcher
      uses: ammaraskar/msvc-problem-matcher@master

    - name: Configure developer command prompt for ${{ matrix.arch }}
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ matrix.host }}

    - name: Build
      shell: bash
      run: |
        mkdir build
        cd build

        echo "::group::CMake"
        cmake ${GITHUB_WORKSPACE} \
          -GNinja \
          -DCMAKE_BUILD_TYPE=RelWithDebInfo \
          -DGOG_GALAXY_CLIENT_ID=${{ secrets.GOG_GALAXY_CLIENT_ID }} \
          -DGOG_GALAXY_CLIENT_SECRET=${{ secrets.GOG_GALAXY_CLIENT_SECRET }} \
          # EOF
        echo "::endgroup::"

        echo "::group::Build"
        cmake --build .
        echo "::endgroup::"

    - name: Create breakpad symbols
      shell: bash
      run: |
        cd build
        dump_syms gog-galaxy-social.pdb --inlines --store symbols

    - name: Sign libraries
      shell: powershell
      # If this is run on a fork, there may not be a certificate set up - continue in this case
      continue-on-error: true
      run: |
        .\os\windows\sign.bat "build\gog-galaxy-social.dll" "${{ secrets.WINDOWS_CERTIFICATE_COMMON_NAME }}"

    - name: Create bundles
      shell: bash
      run: |
        cd ${GITHUB_WORKSPACE}/build
        echo "::group::Run CPack"
        cpack
        echo "::endgroup::"

        echo "::group::Move PDB and dll to symbols"
        PDB_FOLDER=$(find symbols -mindepth 2 -type d)
        cp gog-galaxy-social.pdb ${PDB_FOLDER}/

        EXE_FOLDER=symbols/gog-galaxy-social.dll/$(grep "INFO CODE_ID" symbols/*/*/gog-galaxy-social.sym | cut -d\  -f3)
        mkdir -p ${EXE_FOLDER}
        cp gog-galaxy-social.dll ${EXE_FOLDER}/
        echo "::endgroup::"
      env:
        OPENTTD_PLUGIN_PRIVATE_KEY: ${{ secrets.OPENTTD_PLUGIN_PRIVATE_KEY }}

    - name: Store bundles
      uses: actions/upload-artifact@v4
      with:
        name: gog-galaxy-social-windows-${{ matrix.arch }}
        path: build/bundles
        retention-days: 5

    - name: Store symbols
      uses: actions/upload-artifact@v4
      with:
        name: symbols-windows-${{ matrix.arch }}
        path: build/symbols
        retention-days: 5
